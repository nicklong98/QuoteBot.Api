// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using QuoteBot.DatabaseLayer;

namespace QuoteBot.DatabaseLayer.Migrations
{
    [DbContext(typeof(QuoteContext))]
    [Migration("20201202170429_AddSupportForImages")]
    partial class AddSupportForImages
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("QuoteBot.DatabaseLayer.Entities.Quote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Body")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long>("ReporterId")
                        .HasColumnType("bigint");

                    b.Property<long>("ServerId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Quotes");
                });

            modelBuilder.Entity("QuoteBot.DatabaseLayer.Entities.QuoteAttachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("QuoteId")
                        .HasColumnType("integer");

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("QuoteAttachments");
                });

            modelBuilder.Entity("QuoteBot.DatabaseLayer.Entities.QuoteAttachment", b =>
                {
                    b.HasOne("QuoteBot.DatabaseLayer.Entities.Quote", "Quote")
                        .WithMany("QuoteAttachments")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Quote");
                });

            modelBuilder.Entity("QuoteBot.DatabaseLayer.Entities.Quote", b =>
                {
                    b.Navigation("QuoteAttachments");
                });
#pragma warning restore 612, 618
        }
    }
}
